#!/usr/bin/env ruby

COMMAND_DIR = File.expand_path(File.dirname(__FILE__))
BASENAME = File.basename(__FILE__)
PREFIX = "#{BASENAME}-"

$commands = Dir.glob(File.join(File.dirname(__FILE__), "#{PREFIX}*"))

def list_commands!
    $commands.each do |filename|
        # Optionally, subcommands can put a description on the second line of the file
        lines = File.readlines(filename)
        description = if lines[1] && lines[1].strip.start_with?('#')
            lines[1].strip.gsub(/^#\s*/, '')
        else
            nil
        end

        # Remove the `BASENAME-` PREFIX from the filename to get the name of the subcommand
        subcommand = File.basename(filename)[(BASENAME.size + 1)..-1]
        puts "    #{BASENAME} #{subcommand}"
        if description
            puts "        #{description}"
        end
        puts ''
    end
end

command = ARGV.shift
case command
    when nil, '--help', '-h'
        puts "usage: #{BASENAME} [command]"
        puts ''

        if $commands.empty?
            puts 'Hrm, there are no commands for me to run.'
            puts "I can run any executables in #{COMMAND_DIR} which have filenames that start with `#{PREFIX}`."
            abort
        else
            puts 'Commands:'
            list_commands!
        end
    when '--list', '-l'
        list_commands!
    else
        executable = File.join(COMMAND_DIR, PREFIX + command)
        unless File.exist?(executable)
            puts "I don't know how to #{command}. :("
            abort
        end

        exec executable, *ARGV
end
